#!/usr/bin/env python3

"""
Takes screenshots of the game from the Collection menu.
Add KatamariDiary root to PYTHONPATH before running.
"""

import time

import keyboard

from katamari_diary.log.log import logging

COUNTDOWN = 10

ROWS = 4
COLS = 5
PAGE = ROWS * COLS

NEXT_PAGE = "e"
NEXT_OBJ = "d"

SCREENSHOT_WAIT = 1.25
NAVIGATION_WAIT = 0.25

SCREENSHOT = "ctrl+`"


def countdown(sec: int) -> None:
    for i in range(sec, 0, -1):
        logging.info(f"Starting in {i}s")
        time.sleep(1)


def page(page_num: int, total_pages: int, move_next: bool) -> None:
    if move_next:
        keyboard.send(NEXT_PAGE)
        time.sleep(NAVIGATION_WAIT)
    logging.info(f"Page {page_num:>2}/{total_pages}")


def screenshot(obj_num: int, total_objs: int, move_next: bool) -> None:
    logging.info(f"Screenshotting obj {obj_num:>3}/{total_objs}")
    keyboard.send(SCREENSHOT)
    time.sleep(SCREENSHOT_WAIT)
    if move_next:
        keyboard.send(NEXT_OBJ)
        time.sleep(NAVIGATION_WAIT)


def main() -> None:
    total_objs = int(input("How many objects?: "))
    countdown(COUNTDOWN)
    full_pages = int(total_objs / PAGE)
    remainder_objs = total_objs % PAGE
    total_pages = full_pages + (1 if remainder_objs > 0 else 0)

    for i in range(full_pages):
        page(i + 1, total_pages, i > 0)
        for j in range(PAGE):
            screenshot(i * PAGE + j + 1, total_objs, j < PAGE - 1)

    page(total_pages, total_pages, True)
    for k in range(remainder_objs):
        screenshot(full_pages * PAGE + k + 1, total_objs, k < remainder_objs - 1)


if __name__ == "__main__":
    main()
