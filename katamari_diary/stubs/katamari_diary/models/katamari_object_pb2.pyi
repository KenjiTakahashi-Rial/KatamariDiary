"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _Size:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _SizeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Size.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    INVALID: _Size.ValueType  # 0
    THE_SMALLEST: _Size.ValueType  # 1
    EXTREMELY_SMALL: _Size.ValueType  # 2
    VERY_SMALL: _Size.ValueType  # 3
    SMALL: _Size.ValueType  # 4
    SOMEWHAT_SMALL: _Size.ValueType  # 5
    AVERAGE: _Size.ValueType  # 6
    ABOVE_AVERAGE: _Size.ValueType  # 7
    SOMEWHAT_LARGE: _Size.ValueType  # 8
    LARGE: _Size.ValueType  # 9
    VERY_LARGE: _Size.ValueType  # 10
    EXTREMELY_LARGE: _Size.ValueType  # 11
    THE_LARGEST: _Size.ValueType  # 12

class Size(_Size, metaclass=_SizeEnumTypeWrapper): ...

INVALID: Size.ValueType  # 0
THE_SMALLEST: Size.ValueType  # 1
EXTREMELY_SMALL: Size.ValueType  # 2
VERY_SMALL: Size.ValueType  # 3
SMALL: Size.ValueType  # 4
SOMEWHAT_SMALL: Size.ValueType  # 5
AVERAGE: Size.ValueType  # 6
ABOVE_AVERAGE: Size.ValueType  # 7
SOMEWHAT_LARGE: Size.ValueType  # 8
LARGE: Size.ValueType  # 9
VERY_LARGE: Size.ValueType  # 10
EXTREMELY_LARGE: Size.ValueType  # 11
THE_LARGEST: Size.ValueType  # 12
global___Size = Size

@typing_extensions.final
class KatamariObject(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    SIZE_FIELD_NUMBER: builtins.int
    CATEGORY_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    SIZE_TO_ROLL_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    name: builtins.str
    size: global___Size.ValueType
    category: builtins.str
    location: builtins.str
    size_to_roll: builtins.str
    description: builtins.str
    def __init__(
        self,
        *,
        name: builtins.str | None = ...,
        size: global___Size.ValueType | None = ...,
        category: builtins.str | None = ...,
        location: builtins.str | None = ...,
        size_to_roll: builtins.str | None = ...,
        description: builtins.str | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "category",
            b"category",
            "description",
            b"description",
            "location",
            b"location",
            "name",
            b"name",
            "size",
            b"size",
            "size_to_roll",
            b"size_to_roll",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "category",
            b"category",
            "description",
            b"description",
            "location",
            b"location",
            "name",
            b"name",
            "size",
            b"size",
            "size_to_roll",
            b"size_to_roll",
        ],
    ) -> None: ...

global___KatamariObject = KatamariObject
